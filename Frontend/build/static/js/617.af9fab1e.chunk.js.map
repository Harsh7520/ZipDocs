{"version":3,"file":"static/js/617.af9fab1e.chunk.js","mappings":"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","sources":["components/ValidationErrorMessage/index.tsx","pages/category/editCategory/style.tsx","models/CategoryModel.ts","pages/category/editCategory/index.tsx","service/category.service.ts","service/request.ts"],"sourcesContent":["import React from \"react\";\r\n\r\ntype IProps = {\r\n  message?: string;\r\n  touched?: boolean;\r\n};\r\n\r\nconst ValidationErrorMessage: React.FC<IProps> = (props) => {\r\n  return (\r\n    <>{props.touched && <p className=\" mb-1 text-danger\">{props.message}</p>}</>\r\n  );\r\n};\r\n\r\nexport default ValidationErrorMessage;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { colors } from \"../../../constant/constant\";\r\n\r\nconst editStyle = makeStyles((theme) => ({\r\n  editWrapper: {\r\n    padding: \"42px 0 80px\",\r\n    \"@media (max-width: 991px)\": {\r\n      padding: \"35px 0 50px\",\r\n    },\r\n    \"@media (max-width: 767px)\": {\r\n      padding: \"35px 0 40px\",\r\n    },\r\n    \"& .btn-wrapper\": {\r\n      \"& .btn\": {\r\n        height: \"40px\",\r\n        lineHeight: \"40px\",\r\n        borderRadius: \"4px\",\r\n        textTransform: \"none\",\r\n        fontSize: \"16px\",\r\n        minWidth: \"100px\",\r\n        \"&+.btn\": {\r\n          marginLeft: \"10px\",\r\n        },\r\n      },\r\n    },\r\n    \"& .form-row-wrapper\": {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n      margin: \"0 -15px\",\r\n      \"& .form-col\": {\r\n        padding: \" 0 15px\",\r\n        maxWidth: \"50%\",\r\n        flex: \"0 0 50%\",\r\n        position: \"relative\",\r\n        \"@media(max-width:767px)\": {\r\n          maxWidth: \"100%\",\r\n          flex: \"0 0 100%\",\r\n        },\r\n        \"&.full-width\": {\r\n          maxWidth: \"100%\",\r\n          flex: \"0 0 100%\",\r\n        },\r\n        \"& p\": {\r\n          \"&.text-danger\": {\r\n            fontSize: \"14px\",\r\n            color: colors.primary,\r\n            position: \"absolute\",\r\n            top: \"70%\",\r\n            margin: \"0\",\r\n          },\r\n        },\r\n      },\r\n      \"& .MuiInputBase-formControl\": {\r\n        marginBottom: \"35px\",\r\n      },\r\n    },\r\n    \"& .dropdown-wrapper\": {\r\n      \"& .MuiOutlinedInput-notchedOutline\": {\r\n        borderRadius: \"0\",\r\n      },\r\n      \"& .MuiInputBase-input\": {\r\n        backgroundColor: colors.white,\r\n        height: \"40px\",\r\n        lineHeight: \"40px\",\r\n        borderRadius: \"4px\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport { editStyle };\r\n","export class CategoryModel {\r\n  id?: number;\r\n  name!: string;\r\n\r\n  constructor() {\r\n    this.id = 0;\r\n    this.name = \"\";\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { editStyle } from \"./style\";\r\nimport * as Yup from \"yup\";\r\nimport { materialCommonStyles } from \"../../../utils/materialCommonStyles\";\r\nimport {\r\n  Link,\r\n  Typography,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport categoryService from \"../../../service/category.service\";\r\nimport { StatusCode } from \"../../../constant/constant\";\r\nimport { Formik } from \"formik\";\r\nimport ValidationErrorMessage from \"../../../components/ValidationErrorMessage/index\";\r\nimport { toast } from \"react-toastify\";\r\nimport { CategoryModel } from \"../../../models/CategoryModel\";\r\nimport Category from \"..\";\r\nimport RoleModel from \"../../../models/RoleModel\";\r\n\r\nconst EditCategory: React.FC = () => {\r\n  const [roles, setRoles] = useState<RoleModel[]>([]);\r\n  const classes = editStyle();\r\n  const history = useHistory();\r\n  const initialValues: CategoryModel = new CategoryModel();\r\n  const [initialValueState, setInitialValueState] = useState<CategoryModel>(initialValues);\r\n  const { id } = useParams<{ id?: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) getCategoryById();\r\n  }, [id]);\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    name: Yup.string().required(\"Category Name is required\"),\r\n  });\r\n\r\n  const getCategoryById = (): void => {\r\n    categoryService.getById(Number(id)).then((res) => {\r\n        setInitialValueState({\r\n          id: res.id,\r\n          name: res.name,\r\n        });\r\n    });\r\n  };\r\n\r\n  const onSubmit = (values: CategoryModel): void => {\r\n    categoryService.save(values).then((res) => {\r\n      console.log(res)\r\n        toast.success(\"Record updated successfully\");\r\n        history.push(\"/category\");\r\n    });\r\n  };\r\n  return (\r\n    <div className={classes.editWrapper}>\r\n      <div className=\"container\">\r\n        <Typography variant=\"h1\">{id ? \"Edit\" : \"Add\"} Category</Typography>\r\n        <Formik\r\n          initialValues={initialValueState}\r\n          validationSchema={validationSchema}\r\n          enableReinitialize={true}\r\n          onSubmit={onSubmit}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleBlur,\r\n            handleChange,\r\n            handleSubmit,\r\n          }) => (\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-row-wrapper\">\r\n                <div className=\"form-col\">\r\n                  <TextField\r\n                    id=\"first-name\"\r\n                    name=\"name\"\r\n                    label=\"Category Name *\"\r\n                    variant=\"outlined\"\r\n                    inputProps={{ className: \"small\" }}\r\n                    value={values.name}\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <ValidationErrorMessage\r\n                    message={errors.name}\r\n                    touched={touched.name}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"btn-wrapper\">\r\n                <Button\r\n                  className=\"green-btn btn\"\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  disableElevation\r\n                >\r\n                  Save\r\n                </Button>\r\n                <Button\r\n                  className=\"pink-btn btn\"\r\n                  variant=\"contained\"\r\n                  type=\"button\"\r\n                  color=\"primary\"\r\n                  disableElevation\r\n                  onClick={() => {\r\n                    history.push(\"/category\");\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditCategory;\r\n","import request from \"./request\";\r\nimport FilterModel from \"../models/FilterModel\";\r\nimport BaseList from \"../models/BaseList\";\r\nimport { CategoryModel } from \"../models/CategoryModel\";\r\n\r\nclass CategoryService {\r\n    ENDPOINT = 'api/Category';\r\n\r\n    public async getAll(params: FilterModel): Promise<BaseList<CategoryModel[]>> {\r\n        const url = `${this.ENDPOINT}/list`;\r\n        return request.get<BaseList<CategoryModel[]>>(url, {params} ).then((res) => {\r\n            return res.data;\r\n        });\r\n    }\r\n\r\n    public async getById(id: number): Promise<CategoryModel> {\r\n        const url = `${this.ENDPOINT}/${id}`;\r\n        return request.get<CategoryModel>(url).then((res) => {\r\n            return res.data;\r\n        });\r\n    }\r\n\r\n    public async delete(id: number): Promise<CategoryModel> {\r\n        const url = `${this.ENDPOINT}/Delete/${id}`;\r\n        return request.delete<CategoryModel>(url).then((res) => {\r\n            return res.data;\r\n        });\r\n    }\r\n\r\n    public async save(data: CategoryModel): Promise<CategoryModel> {\r\n        if (data.id) {\r\n            const url = `${this.ENDPOINT}/Update`;\r\n            return request.put<CategoryModel>(url, data ).then((res) => {\r\n                return res.data;\r\n            });\r\n        } else {\r\n            const url = `${this.ENDPOINT}/Add`;\r\n            return request.post<CategoryModel>(url, data ).then((res) => {\r\n                return res.data;\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\nexport default new CategoryService();\r\n","import axios from \"axios\";\r\nimport { StatusCode } from '../constant/constant';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst request = axios.create({\r\n  //baseURL: \"https://web1.anasource.com/BookStore/api/BookStore/\", // url = base url + request url\r\n  baseURL: 'https://localhost:44394/',\r\n  timeout: 12400000,\r\n  responseType: 'json',\r\n});\r\n\r\nlet requests: string[] = [];\r\nlet conflictRequest: string = \"\";\r\n\r\n// Request interceptors Customize based on your need\r\nrequest.interceptors.request.use(\r\n  async (config: any) => {\r\n    if (config.headers) {\r\n      config.headers[\"Content-Type\"] = \"application/json\";\r\n    }\r\n\r\n    if (config.headers[\"isDisableLoader\"] !== true) {\r\n      requests.push(config.url);\r\n      showLoader();\r\n    }\r\n\r\n    return config;\r\n  },\r\n  (error: any) => {\r\n    alert(error);\r\n    Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptors Customize based on your need\r\nrequest.interceptors.response.use(\r\n  (response: any) => {\r\n    const { data } = response;\r\n    removeRequest(response.config.url);\r\n    if (data?.code && data?.code !== \"OK\") {\r\n      return Promise.reject(new Error(data.detail || \"Error\"));\r\n    } else {\r\n      return Promise.resolve(response);\r\n    }\r\n  },\r\n  (error: any) => {\r\n    removeRequest(error.config.url);\r\n    toast.error(error.response.data.detail)\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nfunction showLoader() {\r\n  document.body.classList.add('loader-open');\r\n}\r\n\r\nfunction hideLoader() {\r\n  document.body.classList.remove('loader-open');\r\n}\r\n\r\n// remove completed request\r\nfunction removeRequest(req: string) {\r\n  const i = requests.indexOf(req);\r\n  if (i >= 0) {\r\n    requests.splice(i, 1);\r\n  }\r\n  if (requests.length > 0) {\r\n    showLoader();\r\n  } else {\r\n    hideLoader();\r\n  }\r\n  if (req === conflictRequest) {\r\n    conflictRequest = \"\";\r\n    requests = requests.filter(request => request !== req)\r\n  }\r\n}\r\n\r\nexport default request;\r\n"],"names":["props","touched","className","message","editStyle","makeStyles","theme","editWrapper","padding","height","lineHeight","borderRadius","textTransform","fontSize","minWidth","marginLeft","display","flexWrap","margin","maxWidth","flex","position","color","colors","top","marginBottom","backgroundColor","CategoryModel","id","name","this","useState","classes","history","useHistory","initialValues","initialValueState","setInitialValueState","useParams","useEffect","getCategoryById","validationSchema","Yup","shape","required","categoryService","Number","then","res","Typography","variant","enableReinitialize","onSubmit","values","console","log","toast","push","errors","handleBlur","handleChange","handleSubmit","TextField","label","inputProps","value","onBlur","onChange","ValidationErrorMessage","Button","type","disableElevation","onClick","CategoryService","ENDPOINT","params","url","request","data","axios","baseURL","timeout","responseType","requests","conflictRequest","showLoader","document","body","classList","add","removeRequest","req","i","indexOf","splice","length","remove","filter","interceptors","use","config","headers","error","alert","Promise","reject","response","code","Error","detail","resolve"],"sourceRoot":""}