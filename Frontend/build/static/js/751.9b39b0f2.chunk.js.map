{"version":3,"file":"static/js/751.9b39b0f2.chunk.js","mappings":"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","sources":["pages/update-profile/style.tsx","pages/update-profile/index.tsx","../node_modules/@material-ui/core/esm/Typography/Typography.js"],"sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { colors } from \"../../constant/constant\";\r\n\r\nconst editStyle = makeStyles((theme) => ({\r\n  editWrapper: {\r\n    padding: \"42px 0 80px\",\r\n    \"@media (max-width: 991px)\": {\r\n      padding: \"35px 0 50px\",\r\n    },\r\n    \"@media (max-width: 767px)\": {\r\n      padding: \"35px 0 40px\",\r\n    },\r\n    \"& .btn-wrapper\": {\r\n      \"& .btn\": {\r\n        height: \"40px\",\r\n        lineHeight: \"40px\",\r\n        borderRadius: \"4px\",\r\n        textTransform: \"none\",\r\n        fontSize: \"16px\",\r\n        minWidth: \"100px\",\r\n        \"&+.btn\": {\r\n          marginLeft: \"10px\",\r\n        },\r\n      },\r\n    },\r\n    \"& .form-row-wrapper\": {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n      margin: \"0 -15px\",\r\n      \"& .form-col\": {\r\n        padding: \" 0 15px\",\r\n        maxWidth: \"50%\",\r\n        flex: \"0 0 50%\",\r\n        position: \"relative\",\r\n        \"@media(max-width:767px)\": {\r\n          maxWidth: \"100%\",\r\n          flex: \"0 0 100%\",\r\n        },\r\n        \"&.full-width\": {\r\n          maxWidth: \"100%\",\r\n          flex: \"0 0 100%\",\r\n        },\r\n        \"& p\": {\r\n          \"&.text-danger\": {\r\n            fontSize: \"14px\",\r\n            color: colors.primary,\r\n            position: \"absolute\",\r\n            top: \"70%\",\r\n            margin: \"0\",\r\n          },\r\n        },\r\n      },\r\n      \"& .MuiInputBase-formControl\": {\r\n        marginBottom: \"35px\",\r\n      },\r\n    },\r\n    \"& .dropdown-wrapper\": {\r\n      \"& .MuiOutlinedInput-notchedOutline\": {\r\n        borderRadius: \"0\",\r\n      },\r\n      \"& .MuiInputBase-input\": {\r\n        backgroundColor: colors.white,\r\n        height: \"40px\",\r\n        lineHeight: \"40px\",\r\n        borderRadius: \"4px\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport { editStyle };\r\n","import React from \"react\";\r\nimport { editStyle } from \"./style\";\r\nimport { materialCommonStyles } from \"../../utils/materialCommonStyles\";\r\nimport {\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst UpdateProfile: React.FC = () => {\r\n  const classes = editStyle();\r\n  const materialClasses = materialCommonStyles();\r\n  const history = useHistory();\r\n  return (\r\n    <div className={classes.editWrapper}>\r\n      <div className=\"container\">\r\n        <Typography variant=\"h1\">Update Profile</Typography>\r\n        <div className=\"form-row-wrapper\">\r\n          <div className=\"form-col\">\r\n            <TextField\r\n              id=\"first-name\"\r\n              name=\"firstName\"\r\n              label=\"First Name *\"\r\n              variant=\"outlined\"\r\n              inputProps={{ className: \"small\" }}\r\n            />\r\n          </div>\r\n          <div className=\"form-col\">\r\n            <TextField\r\n              id=\"last-name\"\r\n              name=\"lastName\"\r\n              label=\"Last Name *\"\r\n              variant=\"outlined\"\r\n              inputProps={{ className: \"small\" }}\r\n            />\r\n          </div>\r\n          <div className=\"form-col\">\r\n            <TextField\r\n              id=\"email\"\r\n              name=\"email\"\r\n              label=\"Email *\"\r\n              variant=\"outlined\"\r\n              inputProps={{ className: \"small\" }}\r\n            />\r\n          </div>\r\n          <div className=\"form-col\">\r\n            <TextField\r\n              id=\"newPassword\"\r\n              name=\"newPassword\"\r\n              label=\"New Password \"\r\n              variant=\"outlined\"\r\n              inputProps={{ className: \"small\" }}\r\n            />\r\n          </div>\r\n          <div className=\"form-col\">\r\n            <TextField\r\n              id=\"confirmPassword\"\r\n              name=\"confirmPassword\"\r\n              label=\"Confirm Password \"\r\n              variant=\"outlined\"\r\n              inputProps={{ className: \"small\" }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"btn-wrapper\">\r\n          <Button\r\n            className=\"green-btn btn\"\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            disableElevation\r\n            onClick={() => {\r\n              history.push(\"/\");\r\n            }}\r\n          >\r\n            Save\r\n          </Button>\r\n          <Button\r\n            className=\"pink-btn btn\"\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            disableElevation\r\n            onClick={() => {\r\n              history.push(\"/\");\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);"],"names":["editStyle","makeStyles","theme","editWrapper","padding","height","lineHeight","borderRadius","textTransform","fontSize","minWidth","marginLeft","display","flexWrap","margin","maxWidth","flex","position","color","colors","top","marginBottom","backgroundColor","classes","history","materialCommonStyles","useHistory","className","Typography","variant","TextField","id","name","label","inputProps","Button","type","disableElevation","onClick","push","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","React","props","ref","_props$align","align","_props$color","component","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","_props$variantMapping","variantMapping","other","_objectWithoutProperties","Component","_extends","clsx","root","concat","capitalize","withStyles","typography","caption","button","overline","srOnly","width","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock"],"sourceRoot":""}