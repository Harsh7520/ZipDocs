{"version":3,"file":"static/js/346.f4672013.chunk.js","mappings":"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","sources":["components/ConfirmationDialog.tsx","pages/category/style.tsx","pages/category/index.tsx","service/category.service.ts","service/request.ts"],"sourcesContent":["import { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from \"@material-ui/core\";\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  onConfirm: () => void;\r\n  title: string;\r\n  description: string;\r\n}\r\n\r\nconst ConfirmationDialog: React.FC<Props> = (props: Props) =>{\r\n  const {open, onClose, onConfirm, title, description} = props;\r\n  return (\r\n    <Dialog\r\n          open={open}\r\n          onClose={() => onClose()}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n          className=\"cancel-popup\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {description}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              type=\"button\"\r\n              onClick={() => onClose()}\r\n              className=\"btn pink-btn\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                onConfirm()\r\n              }}\r\n              autoFocus\r\n              className=\"btn green-btn\"\r\n            >\r\n              Ok\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n  )\r\n}\r\n\r\nexport default ConfirmationDialog;","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { colors } from \"../../constant/constant\";\r\n\r\nconst productStyle = makeStyles((theme) => ({\r\n  productWrapper: {\r\n    padding: \"42px 0 80px\",\r\n    \"@media (max-width: 991px)\": {\r\n      padding: \"35px 0 50px\",\r\n    },\r\n    \"@media (max-width: 767px)\": {\r\n      padding: \"35px 0 40px\",\r\n    },\r\n    \"& .btn-wrapper\": {\r\n      textAlign: \"right\",\r\n      display: \"flex\",\r\n      justifyContent: \"flex-end\",\r\n      marginBottom: \"10px\",\r\n      \"& .btn\": {\r\n        height: \"40px\",\r\n        lineHeight: \"40px\",\r\n        minWidth: \"100px\",\r\n        marginLeft: \"10px\",\r\n        padding: \"0 10px\",\r\n        fontSize: \"14px\",\r\n      },\r\n      \"& .MuiFormControl-fullWidth\": {\r\n        maxWidth: \"300px\",\r\n      },\r\n    },\r\n    \"& .MuiTable-root\": {\r\n      \"@media (max-width: 991px)\": {\r\n        width: \"900px\",\r\n        overflow: \"auto\",\r\n      },\r\n      \"& .MuiTableBody-root\": {\r\n        \"& .MuiTableRow-root\": {\r\n          \"& .MuiTableCell-root\": {\r\n            \"&:last-child\": {\r\n              paddingRight: \"0\",\r\n              textAlign: \"right\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n      \"& .green-btn\": {\r\n        height: \"30px\",\r\n        lineHeight: \"30px\",\r\n        minWidth: \"80px\",\r\n        fontSize: \"14px\",\r\n        backgroundColor: \"transparent\",\r\n        textTransform: \"capitalize\",\r\n        color: colors.greenText,\r\n        border: \"1px solid #80BF32\",\r\n        \"&:hover\": {\r\n          backgroundColor: colors.greenText,\r\n          color: colors.white,\r\n        },\r\n      },\r\n      \"& .pink-btn\": {\r\n        height: \"30px\",\r\n        lineHeight: \"30px\",\r\n        minWidth: \"80px\",\r\n        fontSize: \"14px\",\r\n        backgroundColor: \"transparent\",\r\n        color: colors.primary,\r\n        border: \"1px solid #f14d54\",\r\n        marginLeft: \"10px\",\r\n        borderRadius: \"4px\",\r\n        padding: \"0 10px\",\r\n        \"&:hover\": {\r\n          backgroundColor: colors.primary,\r\n          color: colors.white,\r\n        },\r\n      },\r\n    },\r\n    \"& .MuiTablePagination-root\": {\r\n      marginTop: \"20px\",\r\n      \"& .MuiTablePagination-toolbar\": {\r\n        paddingRight: \"20px\",\r\n        \"@media (max-width: 991px)\": {\r\n          padding: \"0\",\r\n        },\r\n        \"@media (max-width: 374px)\": {\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"center\",\r\n        },\r\n        \"& .MuiSelect-selectMenu\": {\r\n          height: \"40px\",\r\n          paddingRight: \"25px !important\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        },\r\n        \"& .MuiSelect-nativeInput\": {\r\n          top: \"0\",\r\n        },\r\n        \"& .MuiIconButton-root\": {\r\n          \"@media (max-width: 574px)\": {\r\n            padding: \"8px\",\r\n          },\r\n          \"@media (max-width: 374px)\": {\r\n            marginLeft: \"0px\",\r\n            marginTop: \"10px\",\r\n          },\r\n        },\r\n        \"& .MuiTablePagination-actions\": {\r\n          \"@media (max-width: 574px)\": {\r\n            marginLeft: \"8px\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport { productStyle };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { productStyle } from \"./style\";\r\nimport {\r\n  defaultFilter,\r\n  RecordsPerPage,\r\n  StatusCode,\r\n} from \"../../constant/constant\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Typography,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport categoryService from \"../../service/category.service\";\r\nimport { toast } from \"react-toastify\";\r\nimport FilterModel from \"../../models/FilterModel\";\r\nimport BaseList from \"../../models/BaseList\";\r\nimport { CategoryModel } from \"../../models/CategoryModel\";\r\nimport ConfirmationDialog from \"../../components/ConfirmationDialog\";\r\n\r\nconst Category: React.FC = () => {\r\n  const classes = productStyle();\r\n  const [filters, setFilters] = useState<FilterModel>(defaultFilter);\r\n  const [categoryRecords, setCategoryRecords] = useState<BaseList<CategoryModel[]>>({totalRecords: 0, records: []});\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const [selectedId, setSelectedId] = useState<number>(0);\r\n\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    const timer: NodeJS.Timeout = setTimeout(() => {\r\n      searchAllCategories({ ...filters });\r\n    }, 500);\r\n    return () => clearTimeout(timer);\r\n  }, [filters]);\r\n\r\n  const searchAllCategories = (filters: FilterModel): void => {\r\n    categoryService.getAll(filters).then((res) => {\r\n      setCategoryRecords(res);\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    { id: \"name\", label: \"Category Name\", minWidth: 100 },\r\n  ];\r\n\r\n  const onConfirmDelete = (): void => {\r\n    categoryService.delete(selectedId).then((res) => {\r\n      toast.success(\"Record deleted successfully\");\r\n        setOpen(false);\r\n        setFilters({ ...filters });\r\n    });\r\n  };\r\n  return (\r\n    <div className={classes.productWrapper}>\r\n      <div className=\"container\">\r\n        <Typography variant=\"h1\">Category</Typography>\r\n        <div className=\"btn-wrapper\">\r\n          <TextField\r\n            id=\"text\"\r\n            name=\"text\"\r\n            placeholder=\"Search...\"\r\n            variant=\"outlined\"\r\n            inputProps={{ className: \"small\" }}\r\n            onChange={(e) => {\r\n              setFilters({ ...filters, keyword: e.target.value, pageIndex: 1 });\r\n            }}\r\n          />\r\n          <Button\r\n            type=\"button\"\r\n            className=\"btn pink-btn\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disableElevation\r\n            onClick={() => history.push(\"/add-category\")}\r\n          >\r\n            Add\r\n          </Button>\r\n        </div>\r\n        <TableContainer>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {categoryRecords?.records?.map((row: CategoryModel, index: number) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell>{row.name}</TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"green-btn btn\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      disableElevation\r\n                      onClick={() => {\r\n                        history.push(`/edit-category/${row.id}`);\r\n                      }}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"btn pink-btn\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      disableElevation\r\n                      onClick={() => {\r\n                        setOpen(true);\r\n                        setSelectedId(row.id ?? 0);\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {!categoryRecords?.records.length && (\r\n                <TableRow className=\"TableRow\">\r\n                  <TableCell colSpan={6} className=\"TableCell\">\r\n                    <Typography align=\"center\" className=\"noDataText\">\r\n                      No Category\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={RecordsPerPage}\r\n          component=\"div\"\r\n          count={categoryRecords?.records.length ? categoryRecords.totalRecords : 0}\r\n          rowsPerPage={filters.pageSize || 0}\r\n          page={filters.pageIndex - 1}\r\n          onPageChange={(e, newPage) => {\r\n            setFilters({ ...filters, pageIndex: newPage + 1 });\r\n          }}\r\n          onRowsPerPageChange={(e) => {\r\n            setFilters({\r\n              ...filters,\r\n              pageIndex: 1,\r\n              pageSize: Number(e.target.value),\r\n            });\r\n          }}\r\n        />\r\n        <ConfirmationDialog\r\n          open={open}\r\n          onClose={() => setOpen(false)}\r\n          onConfirm={() => onConfirmDelete()}\r\n          title=\"Delete category\"\r\n          description=\"Are you sure you want to delete this category?\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","import request from \"./request\";\r\nimport FilterModel from \"../models/FilterModel\";\r\nimport BaseList from \"../models/BaseList\";\r\nimport { CategoryModel } from \"../models/CategoryModel\";\r\n\r\nclass CategoryService {\r\n    ENDPOINT = 'api/Category';\r\n\r\n    public async getAll(params: FilterModel): Promise<BaseList<CategoryModel[]>> {\r\n        const url = `${this.ENDPOINT}/list`;\r\n        return request.get<BaseList<CategoryModel[]>>(url, {params} ).then((res) => {\r\n            return res.data;\r\n        });\r\n    }\r\n\r\n    public async getById(id: number): Promise<CategoryModel> {\r\n        const url = `${this.ENDPOINT}/${id}`;\r\n        return request.get<CategoryModel>(url).then((res) => {\r\n            return res.data;\r\n        });\r\n    }\r\n\r\n    public async delete(id: number): Promise<CategoryModel> {\r\n        const url = `${this.ENDPOINT}/Delete/${id}`;\r\n        return request.delete<CategoryModel>(url).then((res) => {\r\n            return res.data;\r\n        });\r\n    }\r\n\r\n    public async save(data: CategoryModel): Promise<CategoryModel> {\r\n        if (data.id) {\r\n            const url = `${this.ENDPOINT}/Update`;\r\n            return request.put<CategoryModel>(url, data ).then((res) => {\r\n                return res.data;\r\n            });\r\n        } else {\r\n            const url = `${this.ENDPOINT}/Add`;\r\n            return request.post<CategoryModel>(url, data ).then((res) => {\r\n                return res.data;\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\nexport default new CategoryService();\r\n","import axios from \"axios\";\r\nimport { StatusCode } from '../constant/constant';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst request = axios.create({\r\n  //baseURL: \"https://web1.anasource.com/BookStore/api/BookStore/\", // url = base url + request url\r\n  baseURL: 'https://localhost:44394/',\r\n  timeout: 12400000,\r\n  responseType: 'json',\r\n});\r\n\r\nlet requests: string[] = [];\r\nlet conflictRequest: string = \"\";\r\n\r\n// Request interceptors Customize based on your need\r\nrequest.interceptors.request.use(\r\n  async (config: any) => {\r\n    if (config.headers) {\r\n      config.headers[\"Content-Type\"] = \"application/json\";\r\n    }\r\n\r\n    if (config.headers[\"isDisableLoader\"] !== true) {\r\n      requests.push(config.url);\r\n      showLoader();\r\n    }\r\n\r\n    return config;\r\n  },\r\n  (error: any) => {\r\n    alert(error);\r\n    Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptors Customize based on your need\r\nrequest.interceptors.response.use(\r\n  (response: any) => {\r\n    const { data } = response;\r\n    removeRequest(response.config.url);\r\n    if (data?.code && data?.code !== \"OK\") {\r\n      return Promise.reject(new Error(data.detail || \"Error\"));\r\n    } else {\r\n      return Promise.resolve(response);\r\n    }\r\n  },\r\n  (error: any) => {\r\n    removeRequest(error.config.url);\r\n    toast.error(error.response.data.detail)\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nfunction showLoader() {\r\n  document.body.classList.add('loader-open');\r\n}\r\n\r\nfunction hideLoader() {\r\n  document.body.classList.remove('loader-open');\r\n}\r\n\r\n// remove completed request\r\nfunction removeRequest(req: string) {\r\n  const i = requests.indexOf(req);\r\n  if (i >= 0) {\r\n    requests.splice(i, 1);\r\n  }\r\n  if (requests.length > 0) {\r\n    showLoader();\r\n  } else {\r\n    hideLoader();\r\n  }\r\n  if (req === conflictRequest) {\r\n    conflictRequest = \"\";\r\n    requests = requests.filter(request => request !== req)\r\n  }\r\n}\r\n\r\nexport default request;\r\n"],"names":["props","open","onClose","onConfirm","title","description","className","id","type","onClick","autoFocus","productStyle","makeStyles","theme","productWrapper","padding","textAlign","display","justifyContent","marginBottom","height","lineHeight","minWidth","marginLeft","fontSize","maxWidth","width","overflow","paddingRight","backgroundColor","textTransform","color","colors","border","borderRadius","marginTop","flexWrap","alignItems","top","classes","useState","defaultFilter","filters","setFilters","totalRecords","records","categoryRecords","setCategoryRecords","setOpen","selectedId","setSelectedId","history","useHistory","useEffect","timer","setTimeout","searchAllCategories","clearTimeout","categoryService","then","res","Typography","variant","TextField","name","placeholder","inputProps","onChange","e","keyword","target","value","pageIndex","Button","disableElevation","push","TableContainer","Table","TableHead","TableRow","label","map","column","TableCell","style","TableBody","row","index","length","colSpan","align","TablePagination","rowsPerPageOptions","RecordsPerPage","component","count","rowsPerPage","pageSize","page","onPageChange","newPage","onRowsPerPageChange","Number","ConfirmationDialog","toast","CategoryService","ENDPOINT","params","url","this","request","data","axios","baseURL","timeout","responseType","requests","conflictRequest","showLoader","document","body","classList","add","removeRequest","req","i","indexOf","splice","remove","filter","interceptors","use","config","headers","error","alert","Promise","reject","response","code","Error","detail","resolve"],"sourceRoot":""}